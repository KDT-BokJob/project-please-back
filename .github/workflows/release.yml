name: deployment
env:
  FLASK_APP_NAME: ${{ secrets.DOCKERHUB_FLASK_REPO }}/please-server
  
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  

  deploy_project:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    # build spring
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt' # See 'Supported distributions' for available options
    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init
    - name: Set Yaml
      uses: microsoft/variable-substitution@v1
      with:
        files: 'spring/src/main/resources/application-oauth.yml'
      env:
        spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
        spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        cloud.aws.s3.bucket: ${{ secrets.AWS_BUCKET_NAME }}
        cloud.aws.credentials.secret-key: ${{ secrets.AWS_SECRET_KEY }}
        cloud.aws.credentials.access-key: ${{ secrets.AWS_ACCESS_KEY }}
    - name: Build with Gradle  
      run: |
        cd spring
        chmod +x ./gradlew
        ./gradlew clean build -x test
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/please-server ./spring
        docker push ${{ secrets.DOCKER_REPO }}/please-server

    # build python
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        cd flask
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_FLASK_USERNAME }}
        password: ${{ secrets.DOCKERHUB_FLASK_PASSWORD }}
    - name: Build Docker image
      run: |
        docker build -t ${{ env.FLASK_APP_NAME }} ./flask
        docker tag ${{ env.FLASK_APP_NAME }}:latest ${{ env.APP_NAME }}:latest
    - name: Push Docker image
      run: |
        docker push ${{ env.FLASK_APP_NAME }}


    # deployment
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/please-server
          docker-compose -f ~/project-please-back/docker-compose.yml up -d
          docker image prune -f
